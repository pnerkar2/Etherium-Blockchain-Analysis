# -*- coding: utf-8 -*-
"""Etherium_Blockchain_Analysis1

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1SP-wI0YuNewGdmPtvVTb4puqur4mVHHR
"""

#!pip install ipython-sql # only needed if you are doing this the first time
!pip install mysqlclient # might need this when you open the file.

# Commented out IPython magic to ensure Python compatibility.
# Syntax for connection to postgresql (not mysql) postgresql://<username>:<password>@<hostname>/database
# We will connect to the etherium mainnet database on anyblock
# since anyblock has disabled new account creation, I am using the same username/password for everyone to access. Hope this works :) 
# %load_ext sql
# %sql postgresql://291ba738-366d-4650-a1ac-92590aace095:fe3ff01b-999d-4d24-9874-633c37726d99@sql.anyblock.net:5432/ethereum_ethereum_mainnet

# Commented out IPython magic to ensure Python compatibility.
# # get list of all tables by excluding system tables and those not 'public'
# 
# %%sql 
# SELECT *
# FROM pg_catalog.pg_tables
# WHERE schemaname != 'pg_catalog' AND 
#     schemaname != 'information_schema' AND schemaname ='public';

# Commented out IPython magic to ensure Python compatibility.
# # explore any one table. Remember to always limit the rows as some of these tables are big.
# %%sql 
# select * from token limit 10;

"""# postgreSQL has some shortcuts for doing basic actions such as seeing table metadata, but these dont work in this interface, without extra packages. 
# To keep things simple, im giving some code snippets for common tasks .

"""

# Commented out IPython magic to ensure Python compatibility.
# # The first one is to see a table structure. You can see the structure in the ER model as well at https://docs.google.com/spreadsheets/d/1ehCIQxjSZcVLnddDWHBzhPb8h83mHWZxvyX9eckghbU/edit#gid=1071981661
# %%sql 
# SELECT 
#    table_name, 
#    column_name, 
#    data_type 
# FROM 
#    information_schema.columns
# WHERE 
#    table_name = 'token';

"""## Query 1 
Find the timestamp of the earliest transaction on the etherium blockchain
"""

# Commented out IPython magic to ensure Python compatibility.
# # Enter Query 1 Code here
# %%sql
# SELECT MIN(timestamp) as First_TimeStamp from tx;

"""## Query 2
Go to [Opensea](https://opensea.io/) and find an NFT project you like to study. Some popular ones are CryptoPunks, BoredApeYatchClub and more. Find the contract address for the from Opensea/Etherscan and then calculate the sum total of ether sent to that address. Open sea shows some metrics on total traded amount, and metrics by week as well. You can use that as a reference 
"""

# Commented out IPython magic to ensure Python compatibility.
# # Enter Query 2 Code here 
# %%sql
# SELECT sum(value)/1000000000000000000 as TotalTradedAmountinEther from tx
# where "to" = '0xF43Aaa80a8F9dE69bc71aeA989AfCeB8DB7b690F'
# and status = True
# ;

"""## Query 3 
For the NFT project above, find the name of the project and the link to the website (json data type) from the 'token' table 
"""

# Commented out IPython magic to ensure Python compatibility.
# # Enter Query 3 code here 
# %%sql 
# SELECT name, links from token
# where address = '0xF43Aaa80a8F9dE69bc71aeA989AfCeB8DB7b690F'
# ;

"""##Query 4 
For the NFT project above(usually a collection), find the highest priced token(NFT) 

"""

# Commented out IPython magic to ensure Python compatibility.
# # Enter query 4 code here
# %%sql
# select max(value)/10^18 as highest_priced_NFT from tx
# where "to" = '0xF43Aaa80a8F9dE69bc71aeA989AfCeB8DB7b690F'

"""## Query 5
Which type of token is the NFT above(Write the Query to find this answer)? Explain the different types of tokens(google search) 
"""

# Commented out IPython magic to ensure Python compatibility.
# # Enter query 5 code here 
# %%sql
# Select name, type from token
# where address = '0xF43Aaa80a8F9dE69bc71aeA989AfCeB8DB7b690F'

"""Types of tokens: 

*   **ERC1155 and ERC721:** These tokens are non-fungible tokens (NFTs) and are widely used in the collectible and gaming industry. The ERC-721 and ERC-1155 smart contracts are being used by developers all over the world to build whole virtual worlds, and we are still in the early stages of mass adoption.
*  **ERC20:** This token has emerged as the technological standard for token 
implementation on the Ethereum blockchain, and it is used for all smart contracts on the Ethereum blockchain. These tokens are digital assets that can be sent and received on the Ethereum blockchain. The main difference is that ERC-20 tokens are distributed on the Ethereum network rather than on their blockchain.

## Query 6/7/8/9/10
Write five queries based on your interests. First explain why the query is useful/interesting. You may pick other projects than the one used above, but the queries have to be different from those above. You must have at least two queries with an aggregate function, and at least one with a subquery(instead of a JOIN). If a query has a subquery and an aggregate function together, it meets both criteria. I would recommend each member write at least one query and put your name on it.
"""

# Commented out IPython magic to ensure Python compatibility.
# # 6  Analyzing the soccer doge club NFT project further, we find the block hash address having highest transactions to the soccer doge club.  - Tejas
# %%sql 
# Select count(*), block_hash from tx t 
# where "to" = '0xF43Aaa80a8F9dE69bc71aeA989AfCeB8DB7b690F'
# group by block_hash
# order by count(*) desc
# limit 1;

# Commented out IPython magic to ensure Python compatibility.
# # 7 Query to check the total value in wei of all transactions in 2022 and the count of distinct address routed to these transactions
# # We see the the highest transactions were carried out in the month of January. This article gives a further insight 
# # (https://www.google.com/amp/s/www.prestigeonline.com/my/pursuits/wealth/opensea-nft-record-january-2022/amp/) - Prachi
# %%sql 
# Select to_char(timestamp, 'YYYY-MM') as "Year-Month", sum(value) as TotalSent, count(distinct "to") as CountAddress from tx
# where timestamp >= '2022-01-01'
# group by to_char(timestamp, 'YYYY-MM');

# Commented out IPython magic to ensure Python compatibility.
# # 8 Latest balance of SocceDogeClub account to get the current value - Bekhzod
# %%sql
# Select * from balance 
# where address = '0xF43Aaa80a8F9dE69bc71aeA989AfCeB8DB7b690F'
#

# Commented out IPython magic to ensure Python compatibility.
# # 9 Getting block details of the latest transaction for SoccerDogeClub - Arpit
# %%sql
# Select * from Block 
# where id = (
# Select block_hash from balance 
# where address = '0xF43Aaa80a8F9dE69bc71aeA989AfCeB8DB7b690F'
# order by timestamp desc
# limit 1);

# Commented out IPython magic to ensure Python compatibility.
# # 10 Getting details of all failed transactions in this Block to analyse the root cause. #wastedgas  - Arpit
# %%sql 
# Select id, block_number, block_hash, "hash", "from", "to", "nonce", gas, gas_price, transaction_index, value, v, r, s, timestamp, contract_address, cumulative_gas_used, status from tx
# where block_hash = (
# Select block_hash from balance 
# where address = '0xF43Aaa80a8F9dE69bc71aeA989AfCeB8DB7b690F'
# order by timestamp desc
# limit 1)
# and status = False;

